{
  "uid" : "6cf8280202e88d41",
  "name" : "testcase",
  "fullName" : "testcase.test_assume.TestAssert#testcase",
  "historyId" : "a60e71aa5cb18feb8e8d984bcd78ade3",
  "time" : {
    "start" : 1603088064204,
    "stop" : 1603088064246,
    "duration" : 42
  },
  "status" : "failed",
  "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n2 Failed Assumptions:\n\ntest_assume.py:12: AssumptionFailure\n>>\tpytest.assume(1==4)\nAssertionError: assert False\n\ntest_assume.py:14: AssumptionFailure\n>>\tpytest.assume(3==0)\nAssertionError: assert False",
  "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               2 Failed Assumptions:\nE               \nE               test_assume.py:12: AssumptionFailure\nE               >>\tpytest.assume(1==4)\nE               AssertionError: assert False\nE               \nE               test_assume.py:14: AssumptionFailure\nE               >>\tpytest.assume(3==0)\nE               AssertionError: assert False\n\n../../venv/lib/python3.9/site-packages/six.py:702: FailedAssumption",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "begin",
    "time" : {
      "start" : 1603088064204,
      "stop" : 1603088064204,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n2 Failed Assumptions:\n\ntest_assume.py:12: AssumptionFailure\n>>\tpytest.assume(1==4)\nAssertionError: assert False\n\ntest_assume.py:14: AssumptionFailure\n>>\tpytest.assume(3==0)\nAssertionError: assert False",
    "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               2 Failed Assumptions:\nE               \nE               test_assume.py:12: AssumptionFailure\nE               >>\tpytest.assume(1==4)\nE               AssertionError: assert False\nE               \nE               test_assume.py:14: AssumptionFailure\nE               >>\tpytest.assume(3==0)\nE               AssertionError: assert False\n\n../../venv/lib/python3.9/site-packages/six.py:702: FailedAssumption",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7fef01652998ccfc",
      "name" : "stdout",
      "source" : "7fef01652998ccfc.txt",
      "type" : "text/plain",
      "size" : 108
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "begin::0",
    "time" : {
      "start" : 1603088064266,
      "stop" : 1603088064266,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_assume"
  }, {
    "name" : "subSuite",
    "value" : "TestAssert"
  }, {
    "name" : "host",
    "value" : "Yiron.local"
  }, {
    "name" : "thread",
    "value" : "88523-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_assume"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "3883a71c1e7ed1",
      "status" : "failed",
      "statusDetails" : "pytest_assume.plugin.FailedAssumption: \n2 Failed Assumptions:\n\ntest_assume.py:12: AssumptionFailure\n>>\tpytest.assume(1==4)\nAssertionError: assert False\n\ntest_assume.py:14: AssumptionFailure\n>>\tpytest.assume(3==0)\nAssertionError: assert False",
      "time" : {
        "start" : 1603086315737,
        "stop" : 1603086315777,
        "duration" : 40
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "6cf8280202e88d41.json",
  "parameterValues" : [ ]
}